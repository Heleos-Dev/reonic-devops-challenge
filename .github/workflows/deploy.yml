---
name: Deploy CDK Stack

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g aws-cdk
          npm run install:all

      - name: Build application
        run: npm run build:app

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image to ECR
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: ./helloworld
          file: ./helloworld/Dockerfile
          push: true
          platforms: linux/amd64

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.x

      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
          lambda_container_image="${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/helloworld:latest""
          terraform plan -var="aws_region=${{ env.AWS_REGION }}" \
                         -var="db_password=${{ secrets.DB_PASSWORD }}" \
                         -var="lambda_container_image=${lambda_container_image}" \
                         -out=tfplan

      - name: Store Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./tfplan
          retention-days: 1

      - name: Terraform apply
        id: apply
        run: |
          terraform apply -auto-approve ./tfplan
